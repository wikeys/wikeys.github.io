[{"title":"Opencv环境设置以及踩坑","date":"2019-10-14T21:02:36.918Z","path":"2019/10/15/opencv使用以及C++编译dll/","text":"下载好opencv的包，解压到D盘 在vs2017中新建好项目，dll项目 找到调试-&gt;属性 把opencv的这两个目录包含进去 库目录则是这个，(测试过，包含vc15时候，使用imshow时候会报错，所以这里包含vc14) 然后是添加依赖项 1把这个添加进去opencv_world411d.lib 然后环境变量中也需要配置 编译成功，找到dll #Python加载dll 使用cytpes来加载DLL/SO 123from ctypes import *mydll = cdll.LoadLibrary('Dll1.dll')mydll.steganographs(image_path,mark_path) 错误一：32位不兼容64位dll 报错了，原因是：我的vs2017是64位的，编译出来的dll是64位的。而python是32位的， 解决办法: 重装一个64位的系统 错误二：Python调用DLL函数之传递数值如果直接传值，只会传入第一个字符 需要使用ctypes 中的c_char_p 需要注意必须是bytes格式 12345from ctypes import *mydll = cdll.LoadLibrary('Dll1.dll')image_path = c_char_p(bytes(image_path,encoding=\"utf-8\"))mark_path = c_char_p(bytes(mark_path,encoding=\"utf-8\"))mydll.steganographs(image_path,mark_path) ##错误三 64位不兼容32位 擦，我尝试编译导入第二个dll，结果又报错。。。刚刚才装完64的python，又尼玛报错64不兼容32 fuck！！！！这次我换一个方法解决了，把vs2017编译环境改成64位， 解决方案 然后清理解决方案，重新生成解决方案 完美！ 干货重装了python，需要换源，国外慢，推荐一个换源工具pqi ###pip换源工具pqi 123pip install pqipqi listpqi use tuna","raw":"---\ntitle: Opencv环境设置以及踩坑\n---\n\n下载好opencv的包，解压到D盘\n\n![1571019501143](../../../../../../../../../../../../assets/image/1571019501143.png)\n\n<!--more-->\n在vs2017中新建好项目，dll项目\n\n![1571019791972](../../../../../../../../../../../../assets/image/1571019791972.png)\n\n找到调试->属性\n\n![1571019531491](../../../../../../../../../../../../assets/image/1571019531491.png)\n\n把opencv的这两个目录包含进去\n\n![1571019602387](../../../../../../../../../../../../assets/image/1571019602387.png)\n\n库目录则是这个，(测试过，包含vc15时候，使用imshow时候会报错，所以这里包含vc14)\n\n![1571019628725](../../../../../../../../../../../../assets/image/1571019628725.png)\n\n然后是添加依赖项\n\n![1571019703253](../../../../../../../../../../../../assets/image/1571019703253.png)\n\n```\n把这个添加进去opencv_world411d.lib\n```\n\n然后环境变量中也需要配置\n\n![1571019761814](../../../../../../../../../../../../assets/image/1571019761814.png)\n\n编译成功，找到dll\n\n![1571020039186](../../../../../../../../../../../../assets/image/1571020039186.png)\n\n#Python加载dll\n\n使用cytpes来加载DLL/SO\n\n```python\nfrom ctypes import *\nmydll = cdll.LoadLibrary('Dll1.dll')\nmydll.steganographs(image_path,mark_path)\n```\n\n## 错误一：32位不兼容64位dll\n\n\n\n![1571025199503](../../../../../../../../../../../../assets/image/1571025199503.png)\n\n报错了，原因是：我的vs2017是64位的，编译出来的dll是64位的。而python是32位的，\n\n解决办法:  重装一个64位的系统\n\n\n\n## 错误二：Python调用DLL函数之传递数值\n\n如果直接传值，只会传入第一个字符\n\n![1571025505355](../../../../../../../../../../../../assets/image/1571025505355.png)\n\n需要使用ctypes 中的c_char_p  需要注意必须是bytes格式\n\n```python\nfrom ctypes import *\nmydll = cdll.LoadLibrary('Dll1.dll')\nimage_path = c_char_p(bytes(image_path,encoding=\"utf-8\"))\nmark_path = c_char_p(bytes(mark_path,encoding=\"utf-8\"))\nmydll.steganographs(image_path,mark_path)\n```\n\n##错误三 64位不兼容32位\n\n擦，我尝试编译导入第二个dll，结果又报错。。。刚刚才装完64的python，又尼玛报错64不兼容32\n\n![1571043020985](../../../../../../../../../../../../assets/image/1571043020985.png)\n\n![1571043053934](../../../../../../../../../../../../assets/image/1571043053934.png)\n\nfuck！！！！这次我换一个方法解决了，把vs2017编译环境改成64位，\n\n![1571043092369](../../../../../../../../../../../../assets/image/1571043092369.png)\n\n解决方案\n\n![1571043100873](../../../../../../../../../../../../assets/image/1571043100873.png)\n\n然后清理解决方案，重新生成解决方案\n\n![1571043131364](../../../../../../../../../../../../assets/image/1571043131364.png)\n\n完美！\n\n## 干货\n\n重装了python，需要换源，国外慢，推荐一个换源工具pqi\n\n###pip换源工具pqi\n\n```\npip install pqi\npqi list\npqi use tuna\n```\n\n","content":"<p>下载好opencv的包，解压到D盘</p>\n<p><img src=\"../../../../../../../../../../../../assets/image/1571019501143.png\" alt=\"1571019501143\"></p>\n<a id=\"more\"></a>\n<p>在vs2017中新建好项目，dll项目</p>\n<p><img src=\"../../../../../../../../../../../../assets/image/1571019791972.png\" alt=\"1571019791972\"></p>\n<p>找到调试-&gt;属性</p>\n<p><img src=\"../../../../../../../../../../../../assets/image/1571019531491.png\" alt=\"1571019531491\"></p>\n<p>把opencv的这两个目录包含进去</p>\n<p><img src=\"../../../../../../../../../../../../assets/image/1571019602387.png\" alt=\"1571019602387\"></p>\n<p>库目录则是这个，(测试过，包含vc15时候，使用imshow时候会报错，所以这里包含vc14)</p>\n<p><img src=\"../../../../../../../../../../../../assets/image/1571019628725.png\" alt=\"1571019628725\"></p>\n<p>然后是添加依赖项</p>\n<p><img src=\"../../../../../../../../../../../../assets/image/1571019703253.png\" alt=\"1571019703253\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">把这个添加进去opencv_world411d.lib</span><br></pre></td></tr></table></figure>\n\n<p>然后环境变量中也需要配置</p>\n<p><img src=\"../../../../../../../../../../../../assets/image/1571019761814.png\" alt=\"1571019761814\"></p>\n<p>编译成功，找到dll</p>\n<p><img src=\"../../../../../../../../../../../../assets/image/1571020039186.png\" alt=\"1571020039186\"></p>\n<p>#Python加载dll</p>\n<p>使用cytpes来加载DLL/SO</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> ctypes <span class=\"keyword\">import</span> *</span><br><span class=\"line\">mydll = cdll.LoadLibrary(<span class=\"string\">'Dll1.dll'</span>)</span><br><span class=\"line\">mydll.steganographs(image_path,mark_path)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"错误一：32位不兼容64位dll\"><a href=\"#错误一：32位不兼容64位dll\" class=\"headerlink\" title=\"错误一：32位不兼容64位dll\"></a>错误一：32位不兼容64位dll</h2><p><img src=\"../../../../../../../../../../../../assets/image/1571025199503.png\" alt=\"1571025199503\"></p>\n<p>报错了，原因是：我的vs2017是64位的，编译出来的dll是64位的。而python是32位的，</p>\n<p>解决办法:  重装一个64位的系统</p>\n<h2 id=\"错误二：Python调用DLL函数之传递数值\"><a href=\"#错误二：Python调用DLL函数之传递数值\" class=\"headerlink\" title=\"错误二：Python调用DLL函数之传递数值\"></a>错误二：Python调用DLL函数之传递数值</h2><p>如果直接传值，只会传入第一个字符</p>\n<p><img src=\"../../../../../../../../../../../../assets/image/1571025505355.png\" alt=\"1571025505355\"></p>\n<p>需要使用ctypes 中的c_char_p  需要注意必须是bytes格式</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> ctypes <span class=\"keyword\">import</span> *</span><br><span class=\"line\">mydll = cdll.LoadLibrary(<span class=\"string\">'Dll1.dll'</span>)</span><br><span class=\"line\">image_path = c_char_p(bytes(image_path,encoding=<span class=\"string\">\"utf-8\"</span>))</span><br><span class=\"line\">mark_path = c_char_p(bytes(mark_path,encoding=<span class=\"string\">\"utf-8\"</span>))</span><br><span class=\"line\">mydll.steganographs(image_path,mark_path)</span><br></pre></td></tr></table></figure>\n\n<p>##错误三 64位不兼容32位</p>\n<p>擦，我尝试编译导入第二个dll，结果又报错。。。刚刚才装完64的python，又尼玛报错64不兼容32</p>\n<p><img src=\"../../../../../../../../../../../../assets/image/1571043020985.png\" alt=\"1571043020985\"></p>\n<p><img src=\"../../../../../../../../../../../../assets/image/1571043053934.png\" alt=\"1571043053934\"></p>\n<p>fuck！！！！这次我换一个方法解决了，把vs2017编译环境改成64位，</p>\n<p><img src=\"../../../../../../../../../../../../assets/image/1571043092369.png\" alt=\"1571043092369\"></p>\n<p>解决方案</p>\n<p><img src=\"../../../../../../../../../../../../assets/image/1571043100873.png\" alt=\"1571043100873\"></p>\n<p>然后清理解决方案，重新生成解决方案</p>\n<p><img src=\"../../../../../../../../../../../../assets/image/1571043131364.png\" alt=\"1571043131364\"></p>\n<p>完美！</p>\n<h2 id=\"干货\"><a href=\"#干货\" class=\"headerlink\" title=\"干货\"></a>干货</h2><p>重装了python，需要换源，国外慢，推荐一个换源工具pqi</p>\n<p>###pip换源工具pqi</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install pqi</span><br><span class=\"line\">pqi list</span><br><span class=\"line\">pqi use tuna</span><br></pre></td></tr></table></figure>\n\n","slug":"opencv使用以及C++编译dll","updated":"2019-10-14T23:01:18.761Z","comments":true,"link":"","permalink":"/2019/10/15/opencv使用以及C++编译dll/","excerpt":"下载好opencv的包，解压到D盘","categories":[],"tags":[]},{"title":"Hello World","date":"2019-10-14T11:26:05.335Z","path":"2019/10/14/hello-world/","text":"博客终于搭建起来了。零零散散的知识也有地方可以写了。 接下来，我会把自己的所学所想都发表在我的博客上面。","raw":"---\ntitle: Hello World\n---\n博客终于搭建起来了。零零散散的知识也有地方可以写了。\n\n接下来，我会把自己的所学所想都发表在我的博客上面。\n\n","content":"<p>博客终于搭建起来了。零零散散的知识也有地方可以写了。</p>\n<p>接下来，我会把自己的所学所想都发表在我的博客上面。</p>\n","slug":"hello-world","updated":"2019-10-14T21:17:17.876Z","comments":true,"link":"","permalink":"/2019/10/14/hello-world/","excerpt":"","categories":[],"tags":[]}]